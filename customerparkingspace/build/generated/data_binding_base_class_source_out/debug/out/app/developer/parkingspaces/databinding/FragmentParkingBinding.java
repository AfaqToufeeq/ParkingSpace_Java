// Generated by view binder compiler. Do not edit!
package app.developer.parkingspaces.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import app.developer.parkingspaces.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentParkingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView backButton;

  @NonNull
  public final EditText carModelNo;

  @NonNull
  public final AppCompatButton confirmParking;

  @NonNull
  public final Button datePickerButton;

  @NonNull
  public final TextView datePickerTV;

  @NonNull
  public final EditText email;

  @NonNull
  public final EditText fullName;

  @NonNull
  public final FrameLayout halfCircle;

  @NonNull
  public final ImageView icEmptyList;

  @NonNull
  public final ConstraintLayout layoutEmptyList;

  @NonNull
  public final ConstraintLayout layoutToolBar;

  @NonNull
  public final RelativeLayout ownerInfoRL;

  @NonNull
  public final RecyclerView parkingRecyclerview;

  @NonNull
  public final EditText phone;

  @NonNull
  public final TextView priceTV;

  @NonNull
  public final AppCompatButton proceedButton;

  @NonNull
  public final Button timePickerButton;

  @NonNull
  public final TextView timePickerTV;

  @NonNull
  public final TextView tvTitleSpecific;

  private FragmentParkingBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView backButton,
      @NonNull EditText carModelNo, @NonNull AppCompatButton confirmParking,
      @NonNull Button datePickerButton, @NonNull TextView datePickerTV, @NonNull EditText email,
      @NonNull EditText fullName, @NonNull FrameLayout halfCircle, @NonNull ImageView icEmptyList,
      @NonNull ConstraintLayout layoutEmptyList, @NonNull ConstraintLayout layoutToolBar,
      @NonNull RelativeLayout ownerInfoRL, @NonNull RecyclerView parkingRecyclerview,
      @NonNull EditText phone, @NonNull TextView priceTV, @NonNull AppCompatButton proceedButton,
      @NonNull Button timePickerButton, @NonNull TextView timePickerTV,
      @NonNull TextView tvTitleSpecific) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.carModelNo = carModelNo;
    this.confirmParking = confirmParking;
    this.datePickerButton = datePickerButton;
    this.datePickerTV = datePickerTV;
    this.email = email;
    this.fullName = fullName;
    this.halfCircle = halfCircle;
    this.icEmptyList = icEmptyList;
    this.layoutEmptyList = layoutEmptyList;
    this.layoutToolBar = layoutToolBar;
    this.ownerInfoRL = ownerInfoRL;
    this.parkingRecyclerview = parkingRecyclerview;
    this.phone = phone;
    this.priceTV = priceTV;
    this.proceedButton = proceedButton;
    this.timePickerButton = timePickerButton;
    this.timePickerTV = timePickerTV;
    this.tvTitleSpecific = tvTitleSpecific;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentParkingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentParkingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_parking, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentParkingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      ImageView backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.carModelNo;
      EditText carModelNo = ViewBindings.findChildViewById(rootView, id);
      if (carModelNo == null) {
        break missingId;
      }

      id = R.id.confirmParking;
      AppCompatButton confirmParking = ViewBindings.findChildViewById(rootView, id);
      if (confirmParking == null) {
        break missingId;
      }

      id = R.id.date_picker_button;
      Button datePickerButton = ViewBindings.findChildViewById(rootView, id);
      if (datePickerButton == null) {
        break missingId;
      }

      id = R.id.datePickerTV;
      TextView datePickerTV = ViewBindings.findChildViewById(rootView, id);
      if (datePickerTV == null) {
        break missingId;
      }

      id = R.id.email;
      EditText email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.fullName;
      EditText fullName = ViewBindings.findChildViewById(rootView, id);
      if (fullName == null) {
        break missingId;
      }

      id = R.id.half_circle;
      FrameLayout halfCircle = ViewBindings.findChildViewById(rootView, id);
      if (halfCircle == null) {
        break missingId;
      }

      id = R.id.ic_empty_list;
      ImageView icEmptyList = ViewBindings.findChildViewById(rootView, id);
      if (icEmptyList == null) {
        break missingId;
      }

      id = R.id.layout_emptyList;
      ConstraintLayout layoutEmptyList = ViewBindings.findChildViewById(rootView, id);
      if (layoutEmptyList == null) {
        break missingId;
      }

      id = R.id.layout_toolBar;
      ConstraintLayout layoutToolBar = ViewBindings.findChildViewById(rootView, id);
      if (layoutToolBar == null) {
        break missingId;
      }

      id = R.id.ownerInfo_RL;
      RelativeLayout ownerInfoRL = ViewBindings.findChildViewById(rootView, id);
      if (ownerInfoRL == null) {
        break missingId;
      }

      id = R.id.parkingRecyclerview;
      RecyclerView parkingRecyclerview = ViewBindings.findChildViewById(rootView, id);
      if (parkingRecyclerview == null) {
        break missingId;
      }

      id = R.id.phone;
      EditText phone = ViewBindings.findChildViewById(rootView, id);
      if (phone == null) {
        break missingId;
      }

      id = R.id.priceTV;
      TextView priceTV = ViewBindings.findChildViewById(rootView, id);
      if (priceTV == null) {
        break missingId;
      }

      id = R.id.proceedButton;
      AppCompatButton proceedButton = ViewBindings.findChildViewById(rootView, id);
      if (proceedButton == null) {
        break missingId;
      }

      id = R.id.time_picker_button;
      Button timePickerButton = ViewBindings.findChildViewById(rootView, id);
      if (timePickerButton == null) {
        break missingId;
      }

      id = R.id.timePickerTV;
      TextView timePickerTV = ViewBindings.findChildViewById(rootView, id);
      if (timePickerTV == null) {
        break missingId;
      }

      id = R.id.tv_title_specific;
      TextView tvTitleSpecific = ViewBindings.findChildViewById(rootView, id);
      if (tvTitleSpecific == null) {
        break missingId;
      }

      return new FragmentParkingBinding((ConstraintLayout) rootView, backButton, carModelNo,
          confirmParking, datePickerButton, datePickerTV, email, fullName, halfCircle, icEmptyList,
          layoutEmptyList, layoutToolBar, ownerInfoRL, parkingRecyclerview, phone, priceTV,
          proceedButton, timePickerButton, timePickerTV, tvTitleSpecific);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
