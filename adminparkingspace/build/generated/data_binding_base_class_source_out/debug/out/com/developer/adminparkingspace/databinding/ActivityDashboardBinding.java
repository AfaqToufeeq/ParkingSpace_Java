// Generated by view binder compiler. Do not edit!
package com.developer.adminparkingspace.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.developer.adminparkingspace.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDashboardBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView Parking;

  @NonNull
  public final BottomNavigationView bottomNavBar;

  @NonNull
  public final FrameLayout dashBoardFL;

  @NonNull
  public final CardView dashboardHeader;

  @NonNull
  public final Spinner profileSpinner;

  @NonNull
  public final RelativeLayout rec;

  @NonNull
  public final TextView spaces;

  private ActivityDashboardBinding(@NonNull RelativeLayout rootView, @NonNull TextView Parking,
      @NonNull BottomNavigationView bottomNavBar, @NonNull FrameLayout dashBoardFL,
      @NonNull CardView dashboardHeader, @NonNull Spinner profileSpinner,
      @NonNull RelativeLayout rec, @NonNull TextView spaces) {
    this.rootView = rootView;
    this.Parking = Parking;
    this.bottomNavBar = bottomNavBar;
    this.dashBoardFL = dashBoardFL;
    this.dashboardHeader = dashboardHeader;
    this.profileSpinner = profileSpinner;
    this.rec = rec;
    this.spaces = spaces;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Parking;
      TextView Parking = ViewBindings.findChildViewById(rootView, id);
      if (Parking == null) {
        break missingId;
      }

      id = R.id.bottomNavBar;
      BottomNavigationView bottomNavBar = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavBar == null) {
        break missingId;
      }

      id = R.id.dashBoard_FL;
      FrameLayout dashBoardFL = ViewBindings.findChildViewById(rootView, id);
      if (dashBoardFL == null) {
        break missingId;
      }

      id = R.id.dashboardHeader;
      CardView dashboardHeader = ViewBindings.findChildViewById(rootView, id);
      if (dashboardHeader == null) {
        break missingId;
      }

      id = R.id.profileSpinner;
      Spinner profileSpinner = ViewBindings.findChildViewById(rootView, id);
      if (profileSpinner == null) {
        break missingId;
      }

      id = R.id.rec;
      RelativeLayout rec = ViewBindings.findChildViewById(rootView, id);
      if (rec == null) {
        break missingId;
      }

      id = R.id.spaces;
      TextView spaces = ViewBindings.findChildViewById(rootView, id);
      if (spaces == null) {
        break missingId;
      }

      return new ActivityDashboardBinding((RelativeLayout) rootView, Parking, bottomNavBar,
          dashBoardFL, dashboardHeader, profileSpinner, rec, spaces);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
